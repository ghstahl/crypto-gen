name: Go

on:
  push:
    branches: [ '**' ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/dependabot.yml'
  pull_request:
    paths-ignore:
      - '**.md'
    branches: [ main ]
env:
  BINARY: 'cli'
  GO_VERSION: '1.18'
  BUILD_PATH: './cmd/cli'
  DOCKER_IMAGE_NAME: 'ghstahl/cobra_starter'
  
jobs:
  pre_flight:
    runs-on: ubuntu-latest
    
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog : ${{ steps.tag_version.outputs.changelog }}
    steps:
    - name: Establish tags and versions
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [pre_flight]
    steps:
    - name: Echo Tags
      run: |
       echo new_tag: ${{needs.pre_flight.outputs.new_tag}} 
       echo changelog: ${{needs.pre_flight.outputs.changelog}}
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "^${{ env.GO_VERSION }}"

    - name: Build
      run: |
        go build -mod=mod -v -a -tags netgo -ldflags "-X 'main.version=${{needs.pre_flight.outputs.new_tag}}' -extldflags '-static'" ${{ env.BUILD_PATH }}
    
    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./${{ env.BINARY }} 

    - name: Test
      run: go test -v ./...

  # Create and post docker image
  build-docker-push-image:
    runs-on: ubuntu-latest
    needs: [ pre_flight, build ]

    steps:
      - name: Echo Tags
        run: |
         echo new_tag: ${{needs.pre_flight.outputs.new_tag}} 
         echo changelog: ${{needs.pre_flight.outputs.changelog}}

      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      # If we ever have more than 1 file, tar before actions/upload-artifact
      - name: Fix Execute Bit
        run: chmod +x build/${{ env.BINARY }}

      - name: ls build dir
        run: |
         ls build/ 
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Inspect builder
        run: |
            echo "Name:      ${{ steps.buildx.outputs.name }}"
            echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
            echo "Status:    ${{ steps.buildx.outputs.status }}"
            echo "Flags:     ${{ steps.buildx.outputs.flags }}"
            echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push docker_build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./build
          file: ./docker/Dockerfile
          push: true
          tags: ${{env.DOCKER_IMAGE_NAME}}:${{needs.pre_flight.outputs.new_tag}},${{env.DOCKER_IMAGE_NAME}}:latest


      - name: Image digest docker_build
        run: echo ${{ steps.docker_build.outputs.digest }}
 
